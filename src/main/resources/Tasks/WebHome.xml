<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Tasks</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Main.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1393842590000</creationDate>
  <date>1393953777000</date>
  <contentUpdateDate>1393953368000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>Tasks.WebHome</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>c8833f41-6c58-4a55-b00d-d9699a1812bf</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.task-card {
  display: inline-block;
  width: 20%;

  margin: 0px;
  margin-right: 1em;
  margin-bottom: 0.5ex;
  padding-top: 0.5ex;
  padding-bottom :1ex;
  padding-left: 1em;
  padding-right: 1em;

  box-shadow: 0.5em 0.5ex 0.5ex #E0E0E0, inset 0.5em 1ex 1em -1ex #2173AF;

  border-style: solid;
  border-width: 1px;
  border-color: gray;
  border-radius: 1ex;
}

.task-card-subtasks {
  display: block;
  width: 100%;
  height: 1ex;

  margin: 0.5ex;
  padding: 0px;

  line-height: 0px;

  color: black;
}
.task-card-subtasks-status {
  display: inline-block;
  width: 1.5em;
  height: 1ex;

  margin: 0px;
  margin-right: 0.1em;
  padding: 0px;

  border-style: none;
  border-radius: 1ex;
}
.task-card-subtasks-status .tooltip {
  position: absolute;
  width: 15em;
  z-index: 10;

  margin: 0em;
  padding: 0.5em;

  background: #FFFFFF;
  font-size: 0%;

  border-style: solid;
  border-radius: 1ex;
  border-width: 0.33ex;

  opacity: 0;
  transition: opacity 0.25s ease-in-out, font-size 0.25s ease-in-out;
}
.task-card-subtasks-status .tooltip img {
  max-height: 0ex;
  transition: max-height 0.25s ease-in-out;
}
.task-card-subtasks-status:hover .tooltip {
  opacity: 0.9;
  font-size: 90%;
}
.task-card-subtasks-status:hover .tooltip img {
  max-height: 5ex;
}
.task-card-subtasks-status-late {
  background: red;
}
.task-card-subtasks-status-late .tooltip {
  border-color: red;
  box-shadow: 0.5em 0.5ex 0.5ex #FFE0E0;
}
.task-card-subtasks-status-late .tooltip::before {
  content: "[$services.localization.render('TaskCode.TaskClass_status_late')] ";
  color: red;
}
.task-card-subtasks-status-todo {
  background: #2173AF;
}
.task-card-subtasks-status-todo .tooltip {
  border-color: #2173AF;
  box-shadow: 0.5em 0.5ex 0.5ex #71C3FF;
}
.task-card-subtasks-status-todo .tooltip::before {
  content: "[$services.localization.render('TaskCode.TaskClass_status_todo')] ";
  color: #2173AF;
}
.task-card-subtasks-status-inprogress {
  background: green;
}
.task-card-subtasks-status-inprogress .tooltip {
  border-color: green;
  box-shadow: 0.5em 0.5ex 0.5ex #E0FFE0;
}
.task-card-subtasks-status-inprogress .tooltip::before {
  content: "[$services.localization.render('TaskCode.TaskClass_status_inprogress')] ";
  color: green;
}
.task-card-subtasks-status-done {
  background: gray;
}
.task-card-subtasks-status-done .tooltip {
  border-color: gray;
  box-shadow: 0.5em 0.5ex 0.5ex #E0E0E0;
}
.task-card-subtasks-status-done .tooltip::before {
  content: "[$services.localization.render('TaskCode.TaskClass_status_done')] ";
  color: gray;
}

.task-card-title {
  color: #2173AF;
  text-align: left;
  font-size: 120%;
}

.task-card-duedate {
  color: gray;
  text-align: left;
  font-size: 60%;
}

.task-card-assignees {
  margin-top: 1ex;
}
.task-card-assignee {
  display: inline-block;
  padding: 0.2em;
  width: 2.5em;

  border-style: solid;
  border-color: white;
  border-width: 0.1ex;
  border-radius: 1ex;
}
.task-card-assignee img {
  height: 5ex;
  background-position: center center;
}
.task-card-assignee .tooltip {
  display: block;
  position: absolute;
  z-index: 10;

  margin-left: -0.5ex;
  margin-top: -5.875ex;
  max-width: 0em;
  padding: 0.25ex;

  background: white;
  box-shadow: 0.5em 0.5ex 0.5ex #E0E0E0;

  border-style: solid;
  border-color: gray;
  border-width: 0.25ex;
  border-radius: 1ex;

  font-size: 0%;

  opacity: 0;
  transition: opacity 0.25s ease-in-out, max-width 0.25s ease-in-out, font-size 0.25s ease-in-out;
}
.task-card-assignee:hover .tooltip {
  opacity: 0.9;
  max-width: 20em;
  font-size: 100%;
}</code>
    </property>
    <property>
      <name>Task card style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <content>
        <disabled>0</disabled>
        <name>content</name>
        <number>3</number>
        <prettyName>Extension Content</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>1</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <disabled>0</disabled>
        <name>parameters</name>
        <number>4</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>5</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <name>Tasks.WebHome</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>4f4b1427-fe0d-49a4-9545-06993fe567ac</guid>
    <property>
      <content/>
    </property>
    <property>
      <extensionPointId>org.xwiki.platform.panels.Applications</extensionPointId>
    </property>
    <property>
      <name>platform.panels.TaskManagerApplication</name>
    </property>
    <property>
      <parameters>label=$services.localization.render('TaskCode.TaskPanel_title')
target=Tasks.WebHome
icon=icon:calendar_view_month</parameters>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
  <content>= {{translation key="Tasks.WebHome.title" /}} =

{{velocity}}
#set($taskName = $xwiki.getUniquePageName('Tasks', 'Task'))
#set($taskURL = $xwiki.getURL($taskName, 'edit'))

{{html}}
&lt;form id="task-create" method="GET" action="$taskURL"&gt;
  &lt;input type="hidden" id="template" name="template" value="TaskCode.TaskTemplate" /&gt;
  &lt;input type="hidden" id="TaskCode.TaskClass_0_reporter" name="TaskCode.TaskClass_0_reporter" value="$xcontext.user" /&gt;
  &lt;input type="submit" form="task-create" class="button" value="$services.localization.render('Tasks.WebHome.add_a_new_task')" /&gt;
&lt;/form&gt;
{{/html}}

{{/velocity}}

== {{translation key="Tasks.WebHome.list_of_tasks" /}} ==

{{velocity}}
#set($query = "from doc.object(TaskCode.TaskClass) as task where doc.fullName &lt;&gt; 'TaskCode.TaskTemplate' order by task.duedate")
#set($results = $services.query.xwql($query).execute())
#macro(cardsStatus $task)
  #set($taskdependencies = $task.getProperty('dependencies').value)
  #set($taskdeplate = [])
  #set($taskdeptodo = [])
  #set($taskdepinprogress = [])
  #set($taskdepdone = [])
  #foreach($dtaskid in $taskdependencies)
    #set($dtaskpageref = $services.model.resolveDocument($dtaskid))
    #set($dtaskpage = $xwiki.getDocument($dtaskpageref))
    #set($dtask = $dtaskpage.getObject('TaskCode.TaskClass'))
    #set($dtaskstatus = $dtask.getProperty('status').value)
    #if($dtask.getProperty('duedate').value.before($datetool.date) &amp;&amp; $dtaskstatus != 'done')
      #set($discard = $taskdeplate.add($dtask))
    #elseif($dtaskstatus == 'todo')
      #set($discard = $taskdeptodo.add($dtask))
    #elseif($dtaskstatus == 'inprogress')
      #set($discard = $taskdepinprogress.add($dtask))
    #elseif($dtaskstatus == 'done')
      #set($discard = $taskdepdone.add($dtask))
    #else
      {{error}}Invalid task status. Contact administrator{{/error}}
    #end
  #end
  (% class="task-card-subtasks" %)
  (((
    #foreach($tlate in $taskdeplate)
      (% class="task-card-subtasks-status task-card-subtasks-status-late" %)
      (((
        #cardsStatusSubtask($tlate)
      )))
    #end
    #foreach($ttodo in $taskdeptodo)
      (% class="task-card-subtasks-status task-card-subtasks-status-todo" %)
      (((
        #cardsStatusSubtask($ttodo)
      )))
    #end
    #foreach($tinprogress in $taskdepinprogress)
      (% class="task-card-subtasks-status task-card-subtasks-status-inprogress" %)
      (((
        #cardsStatusSubtask($tinprogress)
      )))
    #end
    #foreach($tdone in $taskdepdone)
      (% class="task-card-subtasks-status task-card-subtasks-status-done" %)
      (((
        #cardsStatusSubtask($tdone)
      )))
    #end
  )))
#end
#macro(cardsStatusSubtask $task)
  (% class="tooltip" %)
  (((
    [[$task.getProperty('title').value&gt;&gt;$task.getName()]]
    (% class="task-card-duedate" %)
    (((
      $services.localization.render('Tasks.WebHome.due_date_on') ${task.get('duedate')}
    )))
    (% class="task-card-assignees" %)
    (((
      #foreach($assignee in $task.getProperty('assignee').value.split(','))
        (% class="task-card-assignee user-avatar-wrapper" %)
        (((
          #largeUserAvatar($assignee)
        )))
      #end
    )))
)))
#end
#macro(cardsTitle $task)
  #set($tasktitle = $task.getProperty('title').value)
  (% class="task-card-title" %)
  (((
    [[${tasktitle}&gt;&gt;${task.getName()}]]
  )))
#end
#macro(cardsDueDate $task)
  #set($taskduedate = $task.get('duedate'))
  (% class="task-card-duedate" %)
  (((
    $services.localization.render('Tasks.WebHome.due_date_on') $taskduedate
  )))
#end
#macro(cardsAssignees $task)
  #set($taskassignee = $task.getProperty('assignee').value)
  #set($taskassignees = [])
  #foreach($a in $taskassignee.split(','))
    #set($assigneepageref = $services.model.resolveDocument($a))
    #set($assigneepage = $xwiki.getDocument($assigneepageref))
    #set($assignee = $assigneepage.getObject('XWiki.XWikiUsers'))
    #set($discard = $taskassignees.add($assignee))
  #end
  (% class="task-card-assignees" %)
  (((
    #foreach($assignee in $taskassignees)
      (% class="task-card-assignee user-avatar-wrapper" %)
      (((
        #largeUserAvatar(${assignee.getName()})
        (% class="tooltip" %)
        (((
          [[#largeUserAvatar(${assignee.getName()})&gt;&gt;$assignee.getName()]]
          [[${assignee.getProperty('first_name').value} ${assignee.getProperty('last_name').value}&gt;&gt;$assignee.getName()]]
        )))
      )))
    #end
  )))
#end

{{html wiki="true"}}
#foreach($taskid in $results)
  #set($taskpageref = $services.model.resolveDocument($taskid))
  #set($taskpage = $xwiki.getDocument($taskpageref))
  #set($task = $taskpage.getObject('TaskCode.TaskClass'))
  (% class="task-card" %)
  (((
    #cardsStatus($task)
    #cardsTitle($task)
    #cardsDueDate($task)
    #cardsAssignees($task)
  )))
#end
{{/html}}

{{/velocity}}</content>
</xwikidoc>
